worker_processes auto;
error_log /var/log/nginx/error.log;
pid /tmp/nginx.pid;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format slim '[$time_local] "$request_method $request_uri" $status - $remote_addr';

    access_log  /var/log/nginx/access.log  main;

    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    gzip on;
    gzip_disable "msei6";
    gzip_http_version 1.1;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
      application/javascript
      application/json
      application/vnd.ms-fontobject
      application/x-font-ttf
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/opentype
      image/svg+xml
      image/x-icon
      text/css
      text/javascript
      text/xml
      text/plain;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    index   index.html index.htm;

    ssl_protocols TLSv1.2 TLSv1.3;
	ssl_prefer_server_ciphers off;
	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
	ssl_session_timeout 1d;
	ssl_session_cache shared:SSL:50m;
	ssl_session_tickets off;

    ssl_certificate     /etc/nginx/conf.d/cert.pem;
    ssl_certificate_key /etc/nginx/conf.d/key.pem;

    # redirect to https
    server {
        listen 80;
        listen [::]:80;
        server_name default_server;

        location / {
            return 301 https://$host$request_uri;
        }
	}

    # Main Application Server
    server {
        listen *:443 ssl;
        listen [::]:443 ssl;

        error_page 404 = @handler;
        error_page 405 = @handler;

        root   /var/www/html/public; # mounted from app/public
        index  index.php index.html index.htm;

        charset utf-8;

        access_log /var/log/nginx/access.log slim;
        error_log /var/log/nginx/error.log;

        client_max_body_size 50M;

        # block .files
        location ~ /\. {
            deny all;
            log_not_found off;
        }

        # block .composer files
        location ~ composer\..* {
            deny all;
            log_not_found off;
        }

        # block node files
        location ~ node_modules {
            deny all;
            log_not_found off;
        }

        location /elb-status {
            access_log off;
            return 200 'OH YEAAA';
            add_header Content-Type text/plain;
            break;
        }

        # try static files first, then directory, then fall back to @handler
        location / {
            try_files   $uri $uri/ @handler;
            expires     30d;
        }

        # redirect requests into index.php?some/directory/thing
        location @handler {
            rewrite ^ /index.php?/$request_uri;
        }

        # handle any request starting with index.php
        location ~ ^/index.php$ {
            try_files $uri =404;

            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass  app:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param X-Forwarded-Proto $scheme;
            fastcgi_param HTTPS on;
            include       fastcgi_params;
        }

        # Directives to send expires headers and turn off 404 error logging.
        location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf|js|css|json|obj)$ {
            access_log off;
            log_not_found off;
            # Normally, we'd use max in production
            # expires max;
            # But for development, it can cause some headaches - so lets not cache js
            expires -1;
        }

        # deny direct access to any php files
        location ~ \.php$ {
            deny all;
        }
    }
}
